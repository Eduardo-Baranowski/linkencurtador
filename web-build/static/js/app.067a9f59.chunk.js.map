{"version":3,"sources":["src/components/StatusBarPage/index.js","src/components/Menu/styles.js","src/components/Menu/index.js","src/components/ModalLink/styles.js","src/components/ModalLink/index.js","src/pages/Home/styles.js","src/services/api.js","src/utils/storeLinks.js","src/pages/Home/index.js","src/components/ListItem/styles.js","src/components/ListItem/index.js","src/pages/MyLinks/styles.js","src/pages/MyLinks/index.js","src/routes.js","App.js","src/assets/Logo.png"],"names":["StatusBarPage","props","useIsFocused","StatusBar","ButtonMenu","styled","TouchableOpacity","Platform","OS","currentHeight","Menu","navigation","useNavigation","onPress","openDrawer","Feather","name","size","color","ModalContainer","View","Container","Header","LinkArea","Title","Text","LongUrl","ShortLinkArea","ShortLinkUrl","ModalLink","onClose","data","copyLink","Clipboard","setString","link","alert","TouchableWithoutFeedback","style","flex","a","async","Share","share","message","result","action","sharedAction","activityType","console","log","dismissedAction","numberOfLines","long_url","activeOpacity","ContainerLogo","Logo","Image","ContainerContent","SubTitle","ContainerInput","BoxIcon","Input","TextInput","ButtonLink","ButtonLinkText","api","axios","create","baseURL","headers","getLinksSave","key","AsyncStorage","getItem","myLinks","linkSaves","JSON","parse","saveLink","newLink","linksStored","some","id","push","setItem","stringify","deleteLink","links","filter","item","Home","useState","loading","setLoading","input","setInput","modalVisible","setModalVisible","setData","Keyboard","dismiss","LinearGradient","colors","justifyContent","barStyle","backgroundColor","KeyboardAvoidingView","behavior","enabled","source","require","resizeMode","placeholder","placeholderTextColer","autoCapitalize","autoCorrect","keyboardType","value","onChangeText","text","post","response","ActivityIndicator","Modal","visible","transparent","animationType","ContainerButton","Item","ActionContainer","ListItem","selectedItem","deleteItem","Swipeable","renderRightActions","ListLinks","FlatList","ContainerEmpty","WarninText","MyLinks","setLinks","isFocused","handleItem","handleDelete","useEffect","getLinks","length","keyExtractor","String","renderItem","contentContainerStyle","paddingBotton","showsVerticalScrollIndicator","Drawer","createDrawerNavigator","Routes","Navigator","drawerContentOptions","activeBackgroundColor","activeTintColor","marginTop","labelStyle","fontSize","Screen","component","options","title","drawerIcon","focused","Ionicons","App","NavigationContainer","module","exports"],"mappings":"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","file":"static/js/app.067a9f59.chunk.js","sourcesContent":["import React from 'react';\nimport {StatusBar} from 'react-native';\nimport {useIsFocused} from '@react-navigation/native';\n\nfunction StatusBarPage(props) {\n    const isFocused = useIsFocused();\n\n    return isFocused ? <StatusBar {...props} /> : null;\n}\n\nexport default StatusBarPage;","import styled from 'styled-components/native';\nimport { StatusBar, Platform } from \"react-native\";\n\nexport const ButtonMenu = styled.TouchableOpacity`\n    top: ${Platform.OS === 'ios' ? StatusBar.currentHeight+60+'px' : 13+'px'};\n    position: absolute;\n    margin: 0 20px;\n    justify-content: space-around;\n`;","import React from \"react\";\n\nimport { ButtonMenu } from './styles'\nimport { Feather } from \"@expo/vector-icons\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nexport default function Menu() {\n    const navigation = useNavigation();\n\n    return(        \n            <ButtonMenu onPress={() => navigation.openDrawer()}>\n                <Feather name=\"menu\" size={40} color=\"#fff\" />\n            </ButtonMenu>        \n    )\n}","import styled from 'styled-components/native';\n\nexport const ModalContainer = styled.View`\n    flex: 1;    \n`;\n\nexport const Container = styled.View`\n    flex: 1;    \n    background-color: #fff;\n    border-top-right-radius: 10px;\n    border-top-left-radius: 10px;    \n`;\n\nexport const Header = styled.View`\n    flex-direction: row;\n    justify-content: space-between;\n    margin: 15px 0;\n    \n`;\n\nexport const LinkArea = styled.View`\n    flex: 1;\n    justify-content: center;    \n    \n`;\n\nexport const Title = styled.Text`\n    font-size: 33px;\n    font-weight: bold;\n    color: #1ccbae;\n    \n`;\n\nexport const LongUrl = styled.Text`\n    font-size: 17px;\n    color: #a7a7a7;\n    margin-bottom: 30px;    \n`;\n\nexport const ShortLinkArea = styled.TouchableOpacity`\n    height: 45px;\n    width: 100%;\n    background-color: #172742;\n    border-radius: 7px;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 10px;\n`;\n\nexport const ShortLinkUrl = styled.Text`\n    width: 90%;\n    color: #fff;\n    font-size: 16px;\n`;","import React from \"react\";\nimport { Text, TouchableOpacity, View, TouchableWithoutFeedback, Share } from \"react-native\";\n\nimport { Feather } from \"@expo/vector-icons\";\n\nimport Clipboard from \"expo-clipboard\";\nimport { Title, ModalContainer, Container, Header, LinkArea, LongUrl, ShortLinkArea, ShortLinkUrl } from \"./styles\";\n\n\nexport default function ModalLink({onClose, data}) {\n\n    function copyLink(){\n        Clipboard.setString(data.link);\n        alert('Link copiado com sucesso!')\n    }\n\n    async function handleShare() {\n        try {\n            const result = await Share.share({\n                message: `Link: ${data.link}`\n            });\n            if(result.action === Share.sharedAction) {\n                if(result.activityType){\n                    console.log('ActivityType')\n                }else{\n                    console.log('Compartilhado com sucesso!')\n                }\n            } else if(result.action === Share.dismissedAction){\n                console.log('Modal Fechado!')\n            }\n        } catch (error) {\n            console.log(error.message);\n        }\n    }\n\n    return(\n        <ModalContainer>\n            <TouchableWithoutFeedback onPress={onClose}>\n                <View style={{flex:1}}></View>\n            </TouchableWithoutFeedback>\n\n            \n            <Container>\n                <Header>\n                    <TouchableOpacity onPress={onClose}>\n                        <Feather \n                            name=\"x\"\n                            color=\"#212743\"\n                            size={30}\n                        />\n                    </TouchableOpacity>\n\n                    <TouchableOpacity onPress={handleShare}>\n                        <Feather \n                            name=\"share\"\n                            color=\"#212743\"\n                            size={30}\n                        />\n                    </TouchableOpacity>                    \n                </Header>\n\n                <LinkArea>\n                    <Title>Link Encurtado</Title>\n                    <LongUrl numberOfLines={1}>{data.long_url}</LongUrl>\n\n                    <ShortLinkArea\n                        activeOpacity={1}\n                        onPress={copyLink}\n                    >\n                        <ShortLinkUrl numberOfLines={1}>\n                            {data.link}\n                        </ShortLinkUrl>                    \n                    <TouchableOpacity onPress={copyLink}>\n                        <Feather \n                            name=\"copy\"\n                            color=\"#fff\"\n                            size={25}\n                        />\n                    </TouchableOpacity>\n                    </ShortLinkArea>\n                </LinkArea>\n\n\n            </Container>\n        </ModalContainer>\n    )\n}","import styled from \"styled-components/native\";\nimport { Platform } from \"react-native\";\n\nexport const ContainerLogo = styled.View`\n    align-items: center;\n    justify-content: center;\n    margin-top: ${Platform.OS === 'ios' ? 35+'px' : 15+'px'};\n`;\n\nexport const Logo = styled.Image`\n    width: 150px;\n    height: 150px;\n`;\n\nexport const ContainerContent = styled.View`\n    margin-top: ${Platform.OS === 'ios' ? 25+'%' : 15+'%'};\n\n`;\n\nexport const Title = styled.Text`\n    font-size: 35px;\n    color: #fff;\n    font-weight: bold;\n    text-align: center;\n`;\n\nexport const SubTitle = styled.Text`\n    font-size: 18px;\n    color: #fff;\n    text-align: center;\n    padding-bottom: 10%;\n`;\n\nexport const ContainerInput = styled.View`\n    align-items: center;\n    flex-direction: row;\n    width: 100%;\n    border-radius: 7px;\n    margin: 15px 0;\n    padding-left: 15px;\n    padding-right: 15px;\n`;\nexport const BoxIcon = styled.View`\n    align-items: center;\n    justify-content: center;\n    padding-left: 10px;\n    width: 11%;\n    height: 50px;\n    background-color: rgba(255, 255, 255, 0.15);\n    border-top-left-radius: 7px;\n    border-bottom-left-radius: 7px;\n\n`;\nexport const Input = styled.TextInput`\n    align-items: center;\n    justify-content: center;\n    width: 90%;\n    height: 50px;\n    padding: 10px;\n    background-color: rgba(255, 255, 255, 0.15);\n    border-top-right-radius: 7px;\n    border-bottom-right-radius: 7px;    \n    font-size: 17px;\n    color:  #fff;\n`;\n\nexport const ButtonLink = styled.TouchableOpacity`\n    align-items: center;\n    justify-content: center;\n    height: 45px;\n    background-color: #fff;\n    margin: 0 15px;\n    border-radius: 7px;\n    margin-bottom: 15px;\n`;\nexport const ButtonLinkText = styled.Text`\n    font-size: 18px;\n`;","import axios from \"axios\";\n\n//9331f61cf380fb55590c945327708a28e3e48c55\n// base url: https://api-ssl.bitly.com/v4/\n\nexport const key = '9331f61cf380fb55590c945327708a28e3e48c55';\n\nconst api = axios.create({\n    baseURL: 'https://api-ssl.bitly.com/v4',\n    headers:{\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${key}`\n    }\n})\n\nexport default api;","import AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nexport async function getLinksSave(key){\n    const myLinks = await AsyncStorage.getItem(key);\n\n    let linkSaves = JSON.parse(myLinks) || [];\n\n    return linkSaves;\n}\n\nexport async function saveLink(key, newLink){\n    let linksStored = await getLinksSave(key);\n\n    const hasLink = linksStored.some(link => link.id === newLink.id);\n\n    if(hasLink){\n        console.log(\"Link já existe!\")\n        return;\n    }\n\n    linksStored.push(newLink);\n    await AsyncStorage.setItem(key, JSON.stringify(linksStored));\n    console.log('Link salvo com sucesso!')\n\n}\n\nexport async function deleteLink(links, id){\n    let myLinks = links.filter((item)=> {\n        return (item.id !== id)\n    })\n\n    await AsyncStorage.setItem('sujeitolinks', JSON.stringify(myLinks))\n\n    console.log('link deletado');\n\n    return myLinks;\n}","import React, {useState} from 'react';\nimport {LinearGradient} from 'expo-linear-gradient';\nimport StatusBarPage from '../../components/StatusBarPage';\nimport Menu from '../../components/Menu';\nimport ModalLink from \"../../components/ModalLink\";\nimport { \n    TouchableWithoutFeedback, \n    Keyboard, \n    KeyboardAvoidingView, \n    Platform,\n    Modal,\n    ActivityIndicator\n} from \"react-native\";\n\nimport { Feather } from \"@expo/vector-icons\";\nimport {\n    ContainerLogo, \n    Logo, \n    ContainerContent, \n    Title, \n    SubTitle,\n    ContainerInput,\n    BoxIcon,\n    Input,\n    ButtonLink,\n    ButtonLinkText,    \n} from './styles'\n\nimport api from \"../../services/api\";\nimport { saveLink } from \"../../utils/storeLinks\";\n\nexport default function Home() {\n    \n    const [loading, setLoading] = useState(false);\n    const [input, setInput] = useState('');\n    const [modalVisible, setModalVisible] = useState(false);\n    const [data, setData] = useState({});\n\n    async function handleShortLink() {\n        setLoading(true);\n        try {\n            const response = await api.post('/shorten',\n            {\n                long_url: input\n            })\n            \n            setData(response.data);\n            setModalVisible(true);\n\n            saveLink('sujeitolinks', response.data);\n\n            Keyboard.dismiss();\n            setLoading(false);\n            setInput('');\n\n        } catch {\n            alert('Ops, algo deu errado!');\n            Keyboard.dismiss();\n            setInput('');\n            setLoading(false);\n        }\n        \n    }\n\n    return(\n        <TouchableWithoutFeedback onPress={ () => Keyboard.dismiss() }>\n        <LinearGradient\n            colors={['#1ddbb9', '#132742']}\n            style={{ flex: 1, justifyContent:'center'}}\n        >\n            <StatusBarPage\n                barStyle=\"light-context\"\n                backgroundColor=\"#1ddbb9\"\n            />\n\n            <Menu />\n\n            <KeyboardAvoidingView\n                behavior={Platform.OS === 'android' ? 'padding' : 'position'}\n                enabled\n            >\n\n            <ContainerLogo>\n                <Logo source={require('../../assets/Logo.png')} resizeMode=\"contain\" />\n            </ContainerLogo>\n\n            <ContainerContent>\n                <Title>Link</Title>\n                <SubTitle>Cole seu link para encurtar</SubTitle>\n\n                <ContainerInput>\n                    <BoxIcon>                        \n                        <Feather name=\"link\" size={22} color=\"#fff\" />\n                    </BoxIcon>\n                        <Input \n                            placeholder=\"Cole seu link aqui...\"\n                            placeholderTextColer=\"white\"\n                            autoCapitalize=\"none\"\n                            autoCorrect={false}\n                            keyboardType=\"url\"\n                            value={input}\n                            onChangeText={(text) => setInput(text)}\n                        />\n                </ContainerInput>\n\n                <ButtonLink onPress={handleShortLink}>\n                    {\n                        loading ? (\n                            <ActivityIndicator color=\"#121212\" size={24} />\n                        ) : (\n                            <ButtonLinkText>Gerar link</ButtonLinkText>\n                        )\n                    }                    \n                </ButtonLink>\n            </ContainerContent>\n            </KeyboardAvoidingView>\n            <Modal visible={modalVisible} transparent animationType=\"slide\">\n                <ModalLink onClose={() => setModalVisible(false)} data={data}/>\n            </Modal>\n        </LinearGradient>\n        </TouchableWithoutFeedback>\n    )\n}\n","import styled from 'styled-components/native';\n\nexport const ContainerButton = styled.TouchableOpacity`\n    flex-direction: row;\n    background-color: rgba(255, 255, 255, 0.21);\n    margin: 7px 10px;\n    padding: 12px;\n    border-radius: 7px;\n`;\n\nexport const Item = styled.Text`\n    color: #fff;\n    padding-left: 10px;\n    padding-right: 20px;\n    font-size: 18px;\n`;\n\nexport const ActionContainer = styled.TouchableOpacity`\n    width: 15%;\n    background-color: #ff5555;\n    border-radius: 7px;\n    justify-content: center;\n    align-items: center;\n    margin: 7px 10px;\n`;","import React from 'react';\nimport { View, Text } from \"react-native\";\nimport Swipeable from \"react-native-gesture-handler/Swipeable\";\n\nimport {Feather} from '@expo/vector-icons'\nimport { ContainerButton, Item, ActionContainer } from \"./styles\";\n\nexport default function ListItem({data, selectedItem, deleteItem}) {\n\n    function RightActions(){\n        return(\n            <ActionContainer onPress={() => deleteItem(data.id)}>\n                <Feather \n                    name=\"trash\"\n                    color=\"#fff\"\n                    size={24}\n                />\n            </ActionContainer>\n        )\n    }\n\n    return(\n        <View>\n            <Swipeable renderRightActions={RightActions}>\n            <ContainerButton activeOpacity={0.9} onPress={() => selectedItem(data)}>\n                <Feather \n                    name=\"link\"\n                    color=\"#fff\"\n                    size={24}\n                />\n                <Item numberOfLines={1}>{data.long_url}</Item>\n            </ContainerButton>\n            </Swipeable>\n        </View>\n    )\n}","import styled from 'styled-components/native';\nimport { Platform } from \"react-native\";\n\nexport const Container = styled.View`\n    flex: 1;\n    background-color: #132742;\n`;\n\nexport const Title = styled.Text`\n    margin-top: ${Platform.OS === 'ios' ? 35+\"%\" : 20+\"%\"};\n    margin-left: 20px;\n    font-size: 33px;\n    font-weight: bold;\n    color: #fff;\n`;\n\nexport const ListLinks = styled.FlatList`\n\n`;\n\nexport const ContainerEmpty = styled.View`\n    margin-top: 15%;\n    align-items: center;\n`;\n\nexport const WarninText = styled.Text`\n    font-size: 17px;\n    color: #fff;\n`;","import React, {useState, useEffect} from 'react';\nimport { Modal, ActivityIndicator } from \"react-native\";\nimport ListItem from '../../components/ListItem';\nimport { useIsFocused } from \"@react-navigation/native\";\n\nimport Menu from \"../../components/Menu\";\nimport StatusBarPage from '../../components/StatusBarPage';\n\nimport { Container, Title, ListLinks, ContainerEmpty, WarninText } from './styles';\n\nimport ModalLink from \"../../components/ModalLink\";\n\nimport { getLinksSave, deleteLink } from '../../utils/storeLinks';\n\nexport default function MyLinks() {\n\n    const [links, setLinks] = useState([]);\n    const [data, setData] = useState({});\n    const [modalVisible, setModalVisible] = useState();\n    const [loading, setLoading] = useState(true);\n\n    const isFocused = useIsFocused();\n\n    useEffect(() => {\n        async function getLinks(){\n            const result = await getLinksSave('sujeitolinks');\n            setLinks(result);\n            setLoading(false);\n        }\n\n        getLinks();\n    },[isFocused])\n\n    function handleItem(item){\n        setData(item);\n        setModalVisible(true);\n    }\n\n    async function handleDelete(id){\n        const result = await deleteLink(links, id);\n        setLinks(result);\n    }\n\n    return(\n        <Container>\n            <StatusBarPage\n                barStyle=\"light-context\"\n                backgroundColor=\"#132742\"\n            />\n\n            <Menu />\n            <Title>Meus Links</Title>\n            { loading &&(\n                <ContainerEmpty>\n                    <ActivityIndicator color=\"fff\" size={25}/>\n                </ContainerEmpty>                \n            )\n\n            }\n\n            {\n                !loading && links.length === 0 && (\n                    <ContainerEmpty>\n                        <WarninText>\n                            Você ainda não possui nenhum link! :(\n                        </WarninText>\n                    </ContainerEmpty>\n                )\n            }\n\n            <ListLinks \n                data={links}\n                keyExtractor={(item) => String(item.id) }\n                renderItem={ ({item}) => <ListItem data={item}  selectedItem={handleItem} deleteItem={handleDelete} /> }\n                contentContainerStyle={{paddingBotton: 20}}\n                showsVerticalScrollIndicator={false}\n            />\n\n            <Modal visible={modalVisible} transparent animationType=\"slide\">\n                <ModalLink onClose={() => setModalVisible(false)} data={data}/>\n            </Modal>\n        </Container>\n    )\n}\n","import React from 'react';\nimport {createDrawerNavigator} from '@react-navigation/drawer';\n\nimport Home from './pages/Home';\nimport MyLinks from './pages/MyLinks';\n\nimport {Ionicons} from '@expo/vector-icons';\n\nconst Drawer = createDrawerNavigator();\n\nfunction Routes(){\n    return(\n        <Drawer.Navigator\n            drawerContentOptions={{\n                activeBackgroundColor:'#2ccbb9',\n                activeTintColor:\"#fff\",\n                marginTop: 16,\n                labelStyle:{\n                    fontSize: 19\n                }\n            }}\n        >\n\n            <Drawer.Screen\n                name=\"Home\"\n                component={Home}\n                options={{\n                    title: 'Encurtar Link',\n                    drawerIcon: ({focused, size, color}) => (\n                        <Ionicons \n                            name={focused ? 'cube' : 'cube-outline'}\n                            color={color}\n                            size={size}\n                        />\n                    ),\n                }}\n            />\n\n            <Drawer.Screen\n                name=\"MyLinks\"\n                component={MyLinks}\n                options={{\n                    title: 'Meus Links',\n                    drawerIcon: ({focused, size, color}) => (\n                        <Ionicons \n                            name={focused ? 'stats-chart' : 'stats-chart-outline'}\n                            color={color}\n                            size={size}\n                        />\n                    ),\n                }}                \n            />\n        </Drawer.Navigator>        \n    )\n}\n\nexport default Routes;","import 'react-native-gesture-handler';\nimport React from 'react';\nimport {NavigationContainer} from '@react-navigation/native';\n\nimport Routes from './src/routes';\n\nexport default function App() {\n  return(\n    <NavigationContainer>\n      <Routes/>\n    </NavigationContainer>\n  )\n}\n","module.exports = __webpack_public_path__ + \"static/media/Logo.3f6de5bf.png\";"],"sourceRoot":""}